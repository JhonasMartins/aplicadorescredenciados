rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function userDoc() {
      return /databases/$(database)/documents/user/$(request.auth.uid);
    }

    match /user/{userId} {
      allow read: if true;
      allow create, update: if request.auth.uid == userId;
    }

    match /chats/{id} {
      allow read, update: if userDoc() in resource.data.users;
      allow create: if userDoc() in request.resource.data.users;
    }

    match /chat_messages/{id} {
      allow read: if userDoc() in get(resource.data.chat).data.users;
      allow create: if userDoc() in get(request.resource.data.chat).data.users &&
                       userDoc() == request.resource.data.user;
    }

    // WARNING! ONLY FOR TEST MODE: Make sure you properly configure the
    // security rules for this collection before publishing your app.
    match /estetica/{id} {
      allow read, write: if true;
    }

    // WARNING! ONLY FOR TEST MODE: Make sure you properly configure the
    // security rules for this collection before publishing your app.
    match /comentario/{id} {
      allow read, write: if true;
    }

    // WARNING! ONLY FOR TEST MODE: Make sure you properly configure the
    // security rules for this collection before publishing your app.
    match /Servicos/{id} {
      allow read, write: if true;
    }

    // WARNING! ONLY FOR TEST MODE: Make sure you properly configure the
    // security rules for this collection before publishing your app.
    match /pedidodeorcamento/{id} {
      allow read, write: if true;
    }

    // WARNING! ONLY FOR TEST MODE: Make sure you properly configure the
    // security rules for this collection before publishing your app.
    match /cadastro_de_veiculo/{id} {
      allow read, write: if true;
    }

    // WARNING! ONLY FOR TEST MODE: Make sure you properly configure the
    // security rules for this collection before publishing your app.
    match /Esteticas/{id} {
      allow read, write: if true;
    }
  }
}
